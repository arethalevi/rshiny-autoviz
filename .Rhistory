req(input$file1)
dat <- read.csv(input$file1$datapath,
header = input$header,
sep = input$sep,
quote = input$quote)
#define numerical variables
numvar <- select_if(dat,is.numeric)
#define categorical variables
catvar <- select(dat, -any_of(names(numvar)))
#update select input above
updateSelectInput(session,"scat_x",choices=names(numvar))
updateSelectInput(session,"scat_y",choices = names(numvar))
updateSelectInput(session,"bo",choices=names(catvar))
updateSelectInput(session,"box_x",choices=names(catvar))
updateSelectInput(session,"box_y",choices=names(numvar))
updateSelectInput(session,"dens",choices=names(numvar))
dat
})
#output tabeldataset
output$contents <- renderTable({
df <- dataset()
if(input$disp == "head") {
return(head(df))
}
else {
return(df)
}
})
#output viz - plot -a
output$plota <- renderPlot({
ggplot(data = dataset(),
mapping=aes(x=dataset()[[input$scat_x]],y=dataset()[[input$scat_y]]))+
geom_point(color="cornflowerblue")+
geom_smooth(formula = y~x,method="lm")+
labs(x=input$scat_x,
y=input$scat_y)
})
#output viz - plot -b
output$plotb <- renderPlot({
ggplot(data=dataset(),aes(x=dataset()[[input$bo]]))+
geom_bar(fill='cornflowerblue',color="black")+
labs(x=input$bo,y="Frequency")
})
#output viz - plot -c
output$plotc <- renderPlot({
ggplot(data=dataset(), aes(x=dataset()[[input$box_x]],y=dataset()[[input$box_y]]))+
geom_point(aes(color=dataset()[[input$box_x]]),alpha=0.6)+
geom_boxplot(alpha=0.3,colour="brown")+
labs(x=input$box_x, y=input$box_y)+
guides(colour=FALSE)
})
#output viz - plot -d
output$plotd <- renderPlot({
ggplot(data=dataset(),aes(x=dataset()[[input$dens]]))+
geom_density(fill="indianred3")+
labs(x=input$dens, y="density")
})
}
shinyApp(ui, server)
#define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
#theme = "cerulean", # <--- To use a theme, uncomment this
"My First app",
tabPanel("Navbar1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), #sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
#Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
###PRAK 1.1
### SURNAME
library(shiny)
library(shinythemes)
#define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
#theme = "cerulean", # <--- To use a theme, uncomment this
"My First app",
tabPanel("Navbar1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), #sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
#Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage(
#theme = "cerulean", # <--- To use a theme, uncomment this
"My First app",
tabPanel("Navbar1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), #sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
#Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
runApp('HORIZ.R')
runApp('cobadas.R')
library(shiny); runApp('cobadas.R')
dataprov = dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah!="Keseluruhan",]
kas = data %>%
group_by(Tahun, Provinsi)%>%
summarise(Produksi = sum(Produksi), .groups = 'drop')
kas$Buah <-"Keseluruhan"
kas$X <- c(5460:5669)
dataff = rbind(data,kas)
library(dplyr)
kas = data %>%
group_by(Tahun, Provinsi)%>%
summarise(Produksi = sum(Produksi), .groups = 'drop')
kas$Buah <-"Keseluruhan"
kas$X <- c(5460:5669)
dataff = rbind(data,kas)
dataprov = dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah!="Keseluruhan",]
View(dataprov)
ggplot(dataprov, aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
library(ggplot2)
ggplot(dataprov, aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Alpukat",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Stroberi",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
ggplot(dataff[dataff$Provinsi=="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
dd=dataff[dataff$Provinsi=="INDONESIA"& dataff$Buah=="Keseluruhan",]
View(dd)
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
dd=dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",]
View(dd)
b= ggplot(alp3, text=paste("Buah: ",Buah,
"<br>Produksi: ",Produksi,"ton")) +
geom_col(mapping=aes(x=reorder(Buah,Produksi),y=Produksi,fill=Buah))+
labs(x="",y="",title="Fruit Production")+
coord_flip()+
theme_light()+
theme(legend.position = "none")
ggplotly(b, tooltip="text",height = 350)
library(ggplotly)
library(plotly)
b= ggplot(alp3, text=paste("Buah: ",Buah,
"<br>Produksi: ",Produksi,"ton")) +
geom_col(mapping=aes(x=reorder(Buah,Produksi),y=Produksi,fill=Buah))+
labs(x="",y="",title="Fruit Production")+
coord_flip()+
theme_light()+
theme(legend.position = "none")
ggplotly(b, tooltip="text",height = 350)
b= ggplot(alp3, aes(text=paste("Buah: ",Buah,
"<br>Produksi: ",Produksi,"ton"))) +
geom_col(mapping=aes(x=reorder(Buah,Produksi),y=Produksi,fill=Buah))+
labs(x="",y="",title="Fruit Production")+
coord_flip()+
theme_light()+
theme(legend.position = "none")
ggplotly(b, tooltip="text",height = 350)
library(shiny); runApp('cobadas.R')
data[data$Produksi=="Keseluruhan"&data$Provinsi=="INDONESIA"&data$Tahun==2020,]
data[data$Produksi=="Keseluruhan"&data$Provinsi=="INDONESIA",]
dataff[dataff$Produksi=="Keseluruhan"&dataff$Provinsi=="INDONESIA",]
View(dataff)
View(dataff)
z=dataff[dataff$Produksi=="Keseluruhan"&dataff$Provinsi=="INDONESIA",]
z=dataff[dataff$Produksi=="Keseluruhan",]
z=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA",]
View(z)
z=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2020,]
View(z)
z=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2020,4]
runApp('cobadas.R')
z=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2020,4]
r=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2019,4]
z=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2020,4]
r=dataff[dataff$Buah=="Keseluruhan"&dataff$Provinsi=="INDONESIA"&dataff$Tahun==2019,4]
x = (z-r)/r
x = ((z-r)/r)*100
x = round(((z-r)/r)*100,2)
runApp('cobadas.R')
runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('cobadas.R')
runApp('cobadas.R')
shp <- sf::read_sf("Downloads/IDN_adm1/IDN_adm1.shp")
str(shp)
plot_ly(shp)
da20alp = data[data$Tahun==2020 & data$Buah=="Alpukat",]
da20alp <- da20alp %>%
mutate(Provinsi= if_else(Provinsi=="DKI JAKARTA", "JAKARTA RAYA",
if_else(Provinsi=="DI YOGYAKARTA", "YOGYAKARTA",
if_else(Provinsi=="KEP. BANGKA BELITUNG", "BANGKA-BELITUNG",
if_else(Provinsi=="PAPUA BARAT", "IRIAN JAYA BARAT",
if_else(Provinsi=="KEP. RIAU", "KEPULAUAN RIAU",
Provinsi))))),
Provinsi = stringr::str_to_title(Provinsi))
head(da20alp)
shp<-shp%>%
left_join(da20alp,by=c("NAME_1"="Provinsi"))
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=-1)
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)
plot_ly(shp, color = ~Produksi, split = ~NAME_1,
span = I(-1), showlegend = FALSE,
text = ~paste("<b>", NAME_1, "</b><br>",
"<b>Produksi</b>:", Produksi, "ton"),
hoveron = "fills", hoverinfo = "text")
plot_ly(shp, color = ~Produksi, split = ~NAME_1,
span = I(1), showlegend = FALSE,
text = ~paste("<b>", NAME_1, "</b><br>",
"<b>Produksi</b>:", Produksi, "ton"),
hoveron = "fills", hoverinfo = "text")
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)+
theme_hc()
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)+
theme_hc()+
theme(axis.title.x = element_blank())
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)+
theme(axis.title.x = element_blank())
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)+
theme_void()
runApp('cobadas.R')
theme_update(plot.title = element_text(hjust = 0.5))
runApp('cobadas.R')
dataprov = dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah!="Keseluruhan",]
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)
dd=dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",]
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)+
coord_flip()
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)+
coord_flip()+
theme_void()
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)+
coord_flip()+
theme_light()
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)+
coord_flip()+
theme_light()+
labs(y="",title="Boxplot produksi keseluruhan tanaman buah di Indonesia")
ggplot(dataff[dataff$Provinsi!="INDONESIA"& dataff$Buah=="Keseluruhan",], aes(x=Buah,
y=Produksi))+
geom_boxplot(fill='cornflowerblue',alpha=0.7)+
coord_flip()+
theme_light()+
labs(x="",title="Boxplot produksi keseluruhan tanaman buah di Indonesia")
ggplot(data[data$Provinsi!="INDONESIA" & data$Buah=="Stroberi",],aes(x=Produksi))+
geom_density(fill="indianred3")
ggplot(data[data$Provinsi!="INDONESIA" & data$Buah=="Keseluruhan",],aes(x=Produksi))+
geom_density(fill="indianred3")
ggplot(data[data$Provinsi!="INDONESIA" & data$Buah=="Keseluruhan",],aes(x=Produksi))+
geom_density(fill="indianred3")
x = data[data$Provinsi!="INDONESIA" & data$Buah=="Keseluruhan",]
ggplot(dataff[dataff$Provinsi!="INDONESIA" & dataff$Buah=="Keseluruhan",],aes(x=Produksi))+
geom_density(fill="indianred3")
runApp('cobadas.R')
library(shiny); runApp('cobadas.R')
library(shiny); runApp('Dashboard UAS.R')
plot_ly(shp, color = ~Produksi, split = ~NAME_1,
span = I(1), showlegend = FALSE,
text = ~paste("<b>", NAME_1, "</b><br>",
"<b>Produksi</b>:", Produksi, "ton"),
marker= list(colorscale = list(c(0, 1))),
hoveron = "fills", hoverinfo = "text")
plot_ly(shp, color = ~Produksi, split = ~NAME_1,
span = I(1), showlegend = FALSE,
text = ~paste("<b>", NAME_1, "</b><br>",
"<b>Produksi</b>:", Produksi, "ton"),
marker= list(color=~Produksi,colorscale = list(c(0, 1))),
hoveron = "fills", hoverinfo = "text")
plot_ly(shp, color = ~Produksi, split = ~NAME_1,
span = I(1), showlegend = FALSE,
text = ~paste("<b>", NAME_1, "</b><br>",
"<b>Produksi</b>:", Produksi, "ton"),
hoveron = "fills", hoverinfo = "text")
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=1)+
theme_void()
ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=-1)+
theme_void()
runApp('Dashboard UAS.R')
ggplotly(ggplot(data=shp)+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=-1)+
theme_void()
)
ggplotly(ggplot(data=shp, text=paste("Provinsi: ",Provinsi,
"<br>Produksi: ",Produksi,"ton"))+
geom_sf(aes(fill=Produksi))+
scale_fill_viridis_c(direction=-1)+
theme_void(),
tooltip="text"
)
runApp('Dashboard UAS.R')
runApp('Dashboard UAS.R')
runApp('Dashboard UAS.R')
runApp('Dashboard UAS.R')
runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Dashboard UAS.R')
library(shiny); runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/UAS/Dashboard UAS.R')
runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/UAS/Dashboard UAS.R')
install.packages("rsconnect")
library(shiny); runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Desktop/other/R Dashboard')
runApp('Desktop/other/R Dashboard')
runApp('Desktop/kuliah/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
library(shiny); runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('coba.R')
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='arethalevi',
token='ED1709D9B5031F1F765A86189E8DD630',
secret='wvh5BYToDehx/yrAW5E1SVIVz7dLO+Ptui/XQEsp')
rsconnect::deployApp('/Users/arethalevi/Downloads/dashboard-rshiny')
rsconnect::showLogs()
rsconnect::deployApp('/Users/arethalevi/Downloads/dashboard-rshiny')
library("dplyr")
shiny::runApp('Downloads/dashboard-rshiny')
runApp()
runApp('Downloads/dashboard-rshiny')
runApp()
runApp('Downloads/dashboard-rshiny')
runApp()
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp()
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
data = read.csv("CarPrice_Assignment.csv")
View(data)
data[["fueltype"]]
x = data %>%
count(fueltype)
View(x)
runApp('Downloads/dashboard-rshiny')
x = data %>%
count("fueltype")
fe = "fueltype"
x = data %>%
count(fe)
x = data %>%
count("fueltype")
x = data["fueltype"] %>%
count()
x = "fueltype"
noq = noquote("fueltype")
x = data %>%
count(noq)
x = data %>%
count(noquote("fueltype"))
runApp('Downloads/dashboard-rshiny')
x = data %>%
count(c("fueltype"))
View(x)
x = data %>%
count(c("fueltype","aspiration"))
x = data %>%
filter("fueltype")
x = data %>%
count()
runApp('Downloads/dashboard-rshiny')
shiny::runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
shiny::runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/dashboard-fruit')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/dashboard-fruit')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/dashboard-fruit')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/dashboard-fruit')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/dashboard-fruit')
library(shiny); runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/Dashboard UAS.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/UAS/Dashboard UAS.R')
runApp('Downloads/dashboard-fp')
runApp('Downloads/dashboard-fp')
library(plotly)
library(ggplot2)
shinyApp(ui, server)
runApp(/Users/arethalevi/Downloads/dashboard-fp)
runApp("/Users/arethalevi/Downloads/dashboard-fp")
rsconnect::setAccountInfo(name='arethalevi',
token='ED1709D9B5031F1F765A86189E8DD630',
secret='wvh5BYToDehx/yrAW5E1SVIVz7dLO+Ptui/XQEsp')
shiny::runApp('Downloads/dashboard-rshiny')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Downloads/dashboard-rshiny')
runExample("01_hello")
runExample("02_text")
runExample("07_widgets")
runExample("10_download")
runExample("11_timer")
runExample("08_html")
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(
sidebarPanel("sidebar panel"),
mainPanel("main panel")
) )
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runExample("10_download")
runExample("09_upload")
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runExample("09_upload")
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runExample("09_upload")
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Downloads/dashboard-rshiny')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Documents/Kuliah/Semester 3/Eksplorasi dan Visualisasi Data/tugas/10_Tugas.R')
runApp('Downloads/dashboard-rshiny')
runApp('Downloads/dashboard-rshiny')
